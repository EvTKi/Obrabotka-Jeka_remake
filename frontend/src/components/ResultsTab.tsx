import React from 'react';
import './ResultsTab.css';
interface ProcessedData {
  data: any[];
  highlight_rows: number[];
  tu_summary: Record<string, any>;
  tv_summary: Record<string, any>;
  iv_summary: Record<string, any>;
}

interface ResultsTabProps {
  processedData: ProcessedData | null;
}

const ResultsTab: React.FC<ResultsTabProps> = ({ processedData }) => {
  if (!processedData) {
    return (
      <div className="results-tab">
        <div className="info-box">
          –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ –≤–∫–ª–∞–¥–∫–µ "–ù–∞—Å—Ç—Ä–æ–π–∫–∞".
        </div>
      </div>
    );
  }

  const handleDownload = () => {
    // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ Excel
    alert('–§—É–Ω–∫—Ü–∏—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –ø–æ—Å–ª–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å API');
  };

  // Mock –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  const mockResults = [
    { –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: '–û–±—ä–µ–∫—Ç 1', –í–µ–¥–µ–Ω–∏–µ: '–†–æ–ª—å 1, –†–æ–ª—å 2', –¢–£_–æ–∂–∏–¥–∞–µ–º–æ: 1, –¢–£_–Ω–∞–π–¥–µ–Ω–æ: 1, –¢–í_–æ–∂–∏–¥–∞–µ–º–æ: 2, –¢–í_–Ω–∞–π–¥–µ–Ω–æ: 1 },
    { –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: '–û–±—ä–µ–∫—Ç 2', –í–µ–¥–µ–Ω–∏–µ: '–†–æ–ª—å 3 (–ò)', –¢–£_–æ–∂–∏–¥–∞–µ–º–æ: 1, –¢–£_–Ω–∞–π–¥–µ–Ω–æ: 0, –¢–í_–æ–∂–∏–¥–∞–µ–º–æ: 1, –¢–í_–Ω–∞–π–¥–µ–Ω–æ: 1 },
  ];

  const mockSummary = {
    tu: [
      { value: '–û–±—ä–µ–∫—Ç 1', role: '–¢–£ –û–±—ä–µ–∫—Ç 1', found: '‚úÖ', uid: 'UID001', type: '–¢–æ—á–Ω–æ–µ' },
      { value: '–û–±—ä–µ–∫—Ç 2', role: '–¢–£ –û–±—ä–µ–∫—Ç 2', found: '‚ùå', uid: '', type: '–ù–µ –Ω–∞–π–¥–µ–Ω–æ' }
    ],
    tv: [
      { value: '–†–æ–ª—å 1', role: '–¢–í –†–æ–ª—å 1', found: '‚úÖ', uid: 'UID002', type: '–¢–æ—á–Ω–æ–µ' },
      { value: '–†–æ–ª—å 2', role: '–¢–í –†–æ–ª—å 2', found: '‚ùå', uid: '', type: '–ù–µ –Ω–∞–π–¥–µ–Ω–æ' }
    ],
    iv: [
      { value: '–†–æ–ª—å 3', role: '–ò–í –†–æ–ª—å 3', found: '‚úÖ', uid: 'UID004', type: '–¢–æ—á–Ω–æ–µ' }
    ]
  };

  return (
    <div className="results-tab">
      <h2>üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ —Å—Ç—Ä–æ–∫–∞–º</h2>
      
      <div className="results-section">
        <div className="warning-box">
          ‚ö†Ô∏è –ü–æ–¥—Å–≤–µ—á–µ–Ω–æ {processedData.highlight_rows.length} —Å—Ç—Ä–æ–∫ —Å –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä–æ–ª–µ–π.
        </div>

        <div className="results-table">
          <table>
            <thead>
              <tr>
                <th>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</th>
                <th>–í–µ–¥–µ–Ω–∏–µ</th>
                <th>–¢–£_–æ–∂–∏–¥–∞–µ–º–æ</th>
                <th>–¢–£_–Ω–∞–π–¥–µ–Ω–æ</th>
                <th>–¢–í_–æ–∂–∏–¥–∞–µ–º–æ</th>
                <th>–¢–í_–Ω–∞–π–¥–µ–Ω–æ</th>
                <th>–¢–£_—Ä–æ–ª–∏</th>
                <th>–¢–í_—Ä–æ–ª–∏</th>
                <th>–°–≤–æ–¥–∫–∞_—Ä–æ–ª–∏</th>
              </tr>
            </thead>
            <tbody>
              {mockResults.map((row, index) => (
                <tr key={index} className={index === 1 ? 'highlight-row' : ''}>
                  <td>{row.–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ}</td>
                  <td>{row.–í–µ–¥–µ–Ω–∏–µ}</td>
                  <td>{row.–¢–£_–æ–∂–∏–¥–∞–µ–º–æ}</td>
                  <td>{row.–¢–£_–Ω–∞–π–¥–µ–Ω–æ}</td>
                  <td>{row.–¢–í_–æ–∂–∏–¥–∞–µ–º–æ}</td>
                  <td>{row.–¢–í_–Ω–∞–π–¥–µ–Ω–æ}</td>
                  <td>–¢–£ –û–±—ä–µ–∫—Ç 1</td>
                  <td>–¢–í –†–æ–ª—å 1</td>
                  <td>UID001!UID002</td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>

      <div className="summary-section">
        <h2>üìë –°–≤–æ–¥–Ω—ã–µ —Å–ø–∏—Å–∫–∏ —Ä–æ–ª–µ–π</h2>
        
        <div className="summary-columns">
          <div className="summary-column">
            <h3>üîπ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ (–¢–£)</h3>
            <div className="summary-table">
              <table>
                <thead>
                  <tr>
                    <th>–ó–Ω–∞—á–µ–Ω–∏–µ</th>
                    <th>–°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–∞—è —Ä–æ–ª—å</th>
                    <th>–ù–∞–π–¥–µ–Ω–æ</th>
                    <th>UID</th>
                    <th>–¢–∏–ø —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è</th>
                  </tr>
                </thead>
                <tbody>
                  {mockSummary.tu.map((item, index) => (
                    <tr key={index}>
                      <td>{item.value}</td>
                      <td>{item.role}</td>
                      <td>{item.found}</td>
                      <td>{item.uid}</td>
                      <td>{item.type}</td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </div>
          
          <div className="summary-column">
            <h3>üîπ –í–µ–¥–µ–Ω–∏–µ (–¢–í)</h3>
            <div className="summary-table">
              <table>
                <thead>
                  <tr>
                    <th>–ó–Ω–∞—á–µ–Ω–∏–µ</th>
                    <th>–°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–∞—è —Ä–æ–ª—å</th>
                    <th>–ù–∞–π–¥–µ–Ω–æ</th>
                    <th>UID</th>
                    <th>–¢–∏–ø —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è</th>
                  </tr>
                </thead>
                <tbody>
                  {mockSummary.tv.map((item, index) => (
                    <tr key={index}>
                      <td>{item.value}</td>
                      <td>{item.role}</td>
                      <td>{item.found}</td>
                      <td>{item.uid}</td>
                      <td>{item.type}</td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </div>
          
          <div className="summary-column">
            <h3>üîπ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ –≤–µ–¥–µ–Ω–∏–µ (–ò–í)</h3>
            <div className="summary-table">
              <table>
                <thead>
                  <tr>
                    <th>–ó–Ω–∞—á–µ–Ω–∏–µ</th>
                    <th>–°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–∞—è —Ä–æ–ª—å</th>
                    <th>–ù–∞–π–¥–µ–Ω–æ</th>
                    <th>UID</th>
                    <th>–¢–∏–ø —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è</th>
                  </tr>
                </thead>
                <tbody>
                  {mockSummary.iv.map((item, index) => (
                    <tr key={index}>
                      <td>{item.value}</td>
                      <td>{item.role}</td>
                      <td>{item.found}</td>
                      <td>{item.uid}</td>
                      <td>{item.type}</td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>

      <div className="download-section">
        <button onClick={handleDownload} className="download-btn">
          üì• –°–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç (Excel —Å –ø–æ–¥—Å–≤–µ—Ç–∫–æ–π –∏ UID)
        </button>
      </div>
    </div>
  );
};

export default ResultsTab;