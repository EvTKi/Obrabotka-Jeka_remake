#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ API
"""
import sys
import os

sys.path.insert(0, os.path.dirname(__file__))

def test_api_error_cases():
    """–¢–µ—Å—Ç —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –æ—à–∏–±–æ–∫ API"""
    from fastapi.testclient import TestClient
    from app.main import app
    
    client = TestClient(app)
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫ API...")
    
    # –¢–µ—Å—Ç 1: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã
    print("1. –¢–µ—Å—Ç –±–µ–∑ —Ñ–∞–π–ª–æ–≤...")
    response = client.post("/api/analyze")
    print(f"   Status: {response.status_code}")
    assert response.status_code == 422  # Validation error from FastAPI
    
    # –¢–µ—Å—Ç 2: –ù–µ–≤–∞–ª–∏–¥–Ω—ã–µ —Ñ–∞–π–ª—ã (—Ç–µ–∫—Å—Ç–æ–≤—ã–µ –≤–º–µ—Å—Ç–æ Excel)
    print("2. –¢–µ—Å—Ç —Å —Ç–µ–∫—Å—Ç–æ–≤—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏ –≤–º–µ—Å—Ç–æ Excel...")
    files = {
        'survey_file': ('test.txt', b'not excel content', 'text/plain'),
        'roles_file': ('test.txt', b'not excel content', 'text/plain')
    }
    data = {
        'control_col': '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ',
        'operation_cols': '["–í–µ–¥–µ–Ω–∏–µ"]',
        'role_col': '–†–æ–ª—å',
        'uid_col': 'UID'
    }
    
    response = client.post("/api/analyze", files=files, data=data)
    print(f"   Status: {response.status_code}")
    print(f"   Response: {response.text}")
    
    # –û–∂–∏–¥–∞–µ–º 400 Bad Request
    if response.status_code == 400:
        print("   ‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤")
    else:
        print(f"   ‚ùå –û–∂–∏–¥–∞–ª—Å—è 400, –ø–æ–ª—É—á–µ–Ω {response.status_code}")
        # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ –ø–æ–∫–∞ –Ω–µ –ø–∞–¥–∞–µ–º
    
    # –¢–µ—Å—Ç 3: –ü—É—Å—Ç—ã–µ —Ñ–∞–π–ª—ã
    print("3. –¢–µ—Å—Ç —Å –ø—É—Å—Ç—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏...")
    files = {
        'survey_file': ('empty.xlsx', b'', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'),
        'roles_file': ('empty.xlsx', b'', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet')
    }
    
    response = client.post("/api/analyze", files=files, data=data)
    print(f"   Status: {response.status_code}")
    
    # –¢–µ—Å—Ç 4: –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π JSON –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö
    print("4. –¢–µ—Å—Ç —Å –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–º JSON...")
    files = {
        'survey_file': ('test.xlsx', b'fake excel content', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'),
        'roles_file': ('test.xlsx', b'fake excel content', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet')
    }
    invalid_data = {
        'control_col': '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ',
        'operation_cols': 'invalid json',  # –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π JSON
        'role_col': '–†–æ–ª—å',
        'uid_col': 'UID'
    }
    
    response = client.post("/api/analyze", files=files, data=invalid_data)
    print(f"   Status: {response.status_code}")
    
    print("\n‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ—Å—Ç—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω—ã")

if __name__ == "__main__":
    try:
        test_api_error_cases()
        print("\nüéâ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ API —É–ª—É—á—à–µ–Ω–∞!")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)